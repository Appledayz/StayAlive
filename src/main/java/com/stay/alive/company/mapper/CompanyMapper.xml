<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.stay.alive.company.mapper.CompanyMapper" >
	<select id="selectMemberRatingAndOption" parameterType="String" resultType="com.stay.alive.member.vo.Member">
		SELECT rating_no, rating_name, member_option_no, member_option_name FROM member WHERE member_id = #{memberId}
	</select>
	<insert id="insertCompany" parameterType="com.stay.alive.company.vo.Company">
		INSERT INTO company(member_id, company_name, company_homepage, company_address, company_email, company_detail, rating_no, rating_name, member_option_no, member_option_name, company_register_date) VALUES(#{memberId}, #{companyName}, #{companyHomepage}, #{companyAddress}, #{companyEmail}, #{companyDetail}, #{ratingNo}, #{ratingName}, #{memberOptionNo}, #{memberOptionName}, now())
	</insert>
	<select id="selectMemberAndCompanySearchListCount" resultType="int" parameterType="HashMap">
        SELECT 
        	COUNT(*)
       	FROM member m INNER JOIN company c
       	ON m.member_id = c.member_id
       	<if test='searchKey != ""'>
	       	<choose>
		       	<when test='searchKey.equals("company_name")'>
		       		WHERE c.company_name LIKE #{searchWord}
		       	</when>
		       	<when test='searchKey.equals("member_id")'>
		       		WHERE m.member_id LIKE #{searchWord}
		       	</when>
		       	<when test='searchKey.equals("member_nickname")'>
		       		WHERE m.member_nickname LIKE #{searchWord}
		       	</when>
		       	<otherwise>
		       		WHERE c.company_name LIKE #{searchWord} OR c.company_detail LIKE #{searchWord}
		       	</otherwise>
	       	</choose>
       	</if>
    </select>
    <resultMap type="hashmap" id="resultmap">
    	<result javaType="int" column="companyNo" property="companyNo"></result>
    	<result javaType="java.lang.String" column="companyName" property="companyName"></result>
		<result javaType="java.lang.String" column="memberId" property="memberId"></result>
		<result javaType="java.lang.String" column="memberNickname" property="memberNickname"></result>
    </resultMap>   
    <select id="selectMemberAndCompanySearchList" resultMap="resultmap" parameterType="HashMap">
        SELECT 
        	c.company_no as companyNo, c.company_name as companyName, c.member_id as memberId, m.member_nickname as memberNickname
       	FROM member m INNER JOIN company c
       	ON m.member_id = c.member_id
       	<if test='searchKey != ""'>
	       	<choose>
		       	<when test='searchKey.equals("company_name")'>
		       		WHERE c.company_name LIKE #{searchWord}
		       	</when>
		       	<when test='searchKey.equals("member_id")'>
		       		WHERE m.member_id LIKE #{searchWord}
		       	</when>
		       	<when test='searchKey.equals("member_nickname")'>
		       		WHERE m.member_nickname LIKE #{searchWord}
		       	</when>
		       	<otherwise>
		       		WHERE c.company_name LIKE #{searchWord} OR c.company_detail LIKE #{searchWord}
		       	</otherwise>
	       	</choose>
       	</if>
       	ORDER BY c.company_no DESC LIMIT #{pageMaker.startRow}, #{pageMaker.rowPerPage}
    </select>
    <select id="selectCompanyFromNo" resultType="com.stay.alive.company.vo.Company">
		SELECT 
			company_name as companyName, company_detail as companyDetail 
		FROM company WHERE company_no = #{companyNo}
	</select>
	<select id="selectCompanyFromId" resultType="com.stay.alive.company.vo.Company">
		SELECT company_no, company_name FROM company WHERE member_id = #{memberId}
	</select>
</mapper>